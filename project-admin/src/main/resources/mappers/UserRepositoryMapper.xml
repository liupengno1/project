<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.joinway.yilian.admin.dao.repository.UserRepository">

	<resultMap id="UserGridResultMap" type="com.joinway.yilian.admin.bean.domain.UserGrid" extends="com.joinway.yilian.data.dao.mapper.UserMapper.BaseResultMap">
	</resultMap>

	<sql id="Select">
		select
			<include refid="com.joinway.yilian.data.dao.mapper.UserMapper.Base_Column_List" />
		from t_user where 1
		<foreach collection="_this" index="key" item="value" open="" close="" separator="">
			<if test="!key.startsWith('_')">
				<if test="value == null">
			and ${key} is null
				</if>
				<if test="value != null">
			and ${key} = #{value}
				</if>
			</if>
		</foreach>
		<if test="_this._orderBy != null and _this._orderBy.trim() != ''">
			order by #{_this._orderBy}
		</if>
	</sql>

	<select id="select" parameterType="map" resultMap="com.joinway.yilian.data.dao.mapper.UserMapper.BaseResultMap">
		<include refid="Select"></include>
	</select>
	
	<select id="count" parameterType="map" resultType="long">
		select count(*) from (
		<include refid="Select"></include>
		) t
	</select>

	<select id="selectGrid" parameterType="map" resultMap="UserGridResultMap">
		select 
			u.id 
			, u.login_name 
			, u.password 
			<!-- , u.third_id  -->
			<!-- , u.third_type  -->
			<!-- , u.mobile  -->
			, u.mail 
			, u.nike_name 
			, u.full_name 
			, u.gender 
			, u.age 
			, u.birthday 
			<!-- , u.avatar  -->
			<!-- , u.credit  -->
			<!-- , u.balance --> 
			<!-- , u.checkout_count  -->
			, u.last_login_time 
			, u.last_login_ip 
			, u.delete_status 
			, u.tx_code 
			, u.create_user_id 
			, u.create_by 
			, u.create_date 
			, u.update_user_id 
			, u.update_by 
			, u.update_date 
		from t_user u 
		where delete_status = 1
		<if test="id != null">
			and u.id = #{id}
		</if>
		<if test="login_name != null and login_name.trim() != ''">
			and u.login_name like concat('%', #{login_name}, '%')
		</if>
		<if test="password != null and password.trim() != ''">
			and u.password like concat('%', #{password}, '%')
		</if>
		<!-- <if test="third_id != null and third_id.trim() != ''">
			and u.third_id like concat('%', #{third_id}, '%')
		</if> -->
		<!-- <if test="third_type != null">
			and u.third_type = #{third_type}
		</if> -->
		<!-- <if test="mobile != null and mobile.trim() != ''">
			and u.mobile like concat('%', #{mobile}, '%')
		</if> -->
		<if test="mail != null and mail.trim() != ''">
			and u.mail like concat('%', #{mail}, '%')
		</if>
		<if test="nike_name != null and nike_name.trim() != ''">
			and u.nike_name like concat('%', #{nike_name}, '%')
		</if>
		<if test="full_name != null and full_name.trim() != ''">
			and u.full_name like concat('%', #{full_name}, '%')
		</if>
		<if test="gender != null">
			and u.gender = #{gender}
		</if>
		<if test="age != null">
			and u.age = #{age}
		</if>
		<if test="birthday_from != null">
			and date_format(u.birthday, '%Y-%m-%d') &gt;= #{birthday_from}
		</if>
		<if test="birthday_to != null">
			and date_format(u.birthday, '%Y-%m-%d') &lt;= #{birthday_to}
		</if>
		<if test="birthday != null">
			and date_format(u.birthday, '%Y-%m-%d') = #{birthday}
		</if>
		<!-- <if test="avatar != null and avatar.trim() != ''">
			and u.avatar like concat('%', #{avatar}, '%')
		</if> -->
		<!-- <if test="credit != null">
			and u.credit = #{credit}
		</if> -->
		<!-- <if test="balance != null">
			and u.balance = #{balance}
		</if> -->
		<!-- <if test="checkout_count != null">
			and u.checkout_count = #{checkout_count}
		</if> -->
		<if test="last_login_time_from != null">
			and date_format(u.last_login_time, '%Y-%m-%d') &gt;= #{last_login_time_from}
		</if>
		<if test="last_login_time_to != null">
			and date_format(u.last_login_time, '%Y-%m-%d') &lt;= #{last_login_time_to}
		</if>
		<if test="last_login_time != null">
			and date_format(u.last_login_time, '%Y-%m-%d') = #{last_login_time}
		</if>
		<if test="last_login_ip != null and last_login_ip.trim() != ''">
			and u.last_login_ip like concat('%', #{last_login_ip}, '%')
		</if>
		<if test="tx_code != null and tx_code.trim() != ''">
			and u.tx_code like concat('%', #{tx_code}, '%')
		</if>
		<if test="create_user_id != null">
			and u.create_user_id = #{create_user_id}
		</if>
		<if test="create_by != null and create_by.trim() != ''">
			and u.create_by like concat('%', #{create_by}, '%')
		</if>
		<if test="create_date_from != null">
			and date_format(u.create_date, '%Y-%m-%d') &gt;= #{create_date_from}
		</if>
		<if test="create_date_to != null">
			and date_format(u.create_date, '%Y-%m-%d') &lt;= #{create_date_to}
		</if>
		<if test="create_date != null">
			and date_format(u.create_date, '%Y-%m-%d') = #{create_date}
		</if>
		<if test="update_user_id != null">
			and u.update_user_id = #{update_user_id}
		</if>
		<if test="update_by != null and update_by.trim() != ''">
			and u.update_by like concat('%', #{update_by}, '%')
		</if>
		<if test="update_date_from != null">
			and date_format(u.update_date, '%Y-%m-%d') &gt;= #{update_date_from}
		</if>
		<if test="update_date_to != null">
			and date_format(u.update_date, '%Y-%m-%d') &lt;= #{update_date_to}
		</if>
		<if test="update_date != null">
			and date_format(u.update_date, '%Y-%m-%d') = #{update_date}
		</if>
		order by id desc
	</select>

	<insert id="insert" parameterType="map" useGeneratedKeys="true" keyProperty="id">
		insert into t_user 
		<foreach collection="_this" index="key" open="(" close=")" separator=",">
			<if test="!key.startsWith('_')">
			${key}
			</if>
		</foreach>
		values
		<foreach collection="_this" index="key" item="value" open="(" close=")" separator=",">
			<if test="!key.startsWith('_')">
			if(length(#{value}) = 0, null, #{value})
			</if>
		</foreach>
	</insert>
	
	<update id="update" parameterType="map">
		update t_user set
		<foreach collection="_this" index="key" item="value" open="" close="" separator=",">
		<if test="key != 'id' and !key.startsWith('_')">
			${key} = #{value}
		</if>
		</foreach>
		where id = #{_this.id}
	</update>
	
	<delete id="delete" parameterType="map">
		delete from t_user where 1
		<foreach collection="_this" index="key" item="value" open="" close="" separator="">
			<if test="!key.startsWith('_')">
				<if test="value == null">
			and ${key} is null
				</if>
				<if test="value != null">
			and ${key} = #{value}
				</if>
			</if>
		</foreach>
	</delete>
	
	<!-- <select id="selectAdminUser" parameterType="map" resultMap="com.joinway.yilian.data.dao.mapper.UserMapper.BaseResultMap">
		select u.* from t_user u
			join t_user_role ur on u.id = ur.user_id
			join t_role r on ur.role_id = r.id
		where u.delete_status = 1
			and r.delete_status = 1
			and r.admin_status = 1
		<if test="login_name != null and login_name.trim() != ''">
			and u.login_name = #{login_name}
		</if>
		<if test="password != null and password.trim() != ''">
			and u.password = #{password}
		</if>
	</select> -->
	<select id="selectAdminUser" parameterType="map" resultMap="com.joinway.yilian.data.dao.mapper.UserMapper.BaseResultMap">
		select * from t_admin a where a.delete_status=1 and a.login_name = #{login_name} and a.password = #{password} ;
	</select>
</mapper>