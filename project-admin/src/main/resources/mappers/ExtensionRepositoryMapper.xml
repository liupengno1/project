<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.joinway.yilian.admin.dao.repository.ExtensionRepository">
	<!--
		此文件初版由工具生成，仅需生成一次，请定制开发
		生成时间: 2017-09-22 12:00:49
	-->
	<resultMap id="ExtensionGridResultMap" type="com.joinway.yilian.admin.bean.domain.ExtensionGrid" extends="com.joinway.yilian.data.dao.mapper.ExtensionMapper.BaseResultMap">
	</resultMap>

	<sql id="Select">
		select
			<include refid="com.joinway.yilian.data.dao.mapper.ExtensionMapper.Base_Column_List" />
		from t_extension where 1
		<foreach collection="_this" index="key" item="value" open="" close="" separator="">
			<if test="!key.startsWith('_')">
				<if test="value == null">
			and ${key} is null
				</if>
				<if test="value != null">
			and ${key} = #{value}
				</if>
			</if>
		</foreach>
		<if test="_orderBy != null and _orderBy.trim() != ''">
			order by #{_orderBy}
		</if>
	</sql>

	<select id="select" parameterType="map" resultMap="com.joinway.yilian.data.dao.mapper.ExtensionMapper.BaseResultMap">
		<include refid="Select"></include>
	</select>
	
	<select id="count" parameterType="map" resultType="long">
		select count(*) from (
		<include refid="Select"></include>
		) t
	</select>

	<select id="selectGrid" parameterType="map" resultMap="ExtensionGridResultMap">
		select 
			e.id 
			, e.order_no 
			, e.type 
			, e.work_id 
			, e.nearby_range 
			, e.cost 
			, e.person 
			, e.reason 
			, e.order_status 
			, e.address 
			, e.create_user_id 
			, e.create_by 
			, e.create_date 
			, e.check_user_id 
			, e.check_date 
			, e.start_date 
			, e.invoice 
		from t_extension e 
		where 1 = 1
		<if test="id != null">
			and e.id = #{id}
		</if>
		<if test="order_no != null and order_no.trim() != ''">
			and e.order_no like concat('%', #{order_no}, '%')
		</if>
		<if test="type != null">
			and e.type = #{type}
		</if>
		<if test="work_id != null">
			and e.work_id = #{work_id}
		</if>
		<if test="nearby_range != null and nearby_range.trim() != ''">
			and e.nearby_range like concat('%', #{nearby_range}, '%')
		</if>
		<if test="cost != null">
			and e.cost = #{cost}
		</if>
		<if test="person != null">
			and e.person = #{person}
		</if>
		<if test="reason != null and reason.trim() != ''">
			and e.reason like concat('%', #{reason}, '%')
		</if>
		<if test="order_status != null">
			and e.order_status = #{order_status}
		</if>
		<if test="address != null and address.trim() != ''">
			and e.address like concat('%', #{address}, '%')
		</if>
		<if test="create_user_id != null">
			and e.create_user_id = #{create_user_id}
		</if>
		<if test="create_by != null and create_by.trim() != ''">
			and e.create_by like concat('%', #{create_by}, '%')
		</if>
		<if test="create_date_from != null">
			and date_format(e.create_date, '%Y-%m-%d') &gt;= #{create_date_from}
		</if>
		<if test="create_date_to != null">
			and date_format(e.create_date, '%Y-%m-%d') &lt;= #{create_date_to}
		</if>
		<if test="create_date != null">
			and date_format(e.create_date, '%Y-%m-%d') = #{create_date}
		</if>
		<if test="check_user_id != null">
			and e.check_user_id = #{check_user_id}
		</if>
		<if test="check_date_from != null">
			and date_format(e.check_date, '%Y-%m-%d') &gt;= #{check_date_from}
		</if>
		<if test="check_date_to != null">
			and date_format(e.check_date, '%Y-%m-%d') &lt;= #{check_date_to}
		</if>
		<if test="check_date != null">
			and date_format(e.check_date, '%Y-%m-%d') = #{check_date}
		</if>
		<if test="start_date_from != null">
			and date_format(e.start_date, '%Y-%m-%d') &gt;= #{start_date_from}
		</if>
		<if test="start_date_to != null">
			and date_format(e.start_date, '%Y-%m-%d') &lt;= #{start_date_to}
		</if>
		<if test="start_date != null">
			and date_format(e.start_date, '%Y-%m-%d') = #{start_date}
		</if>
		<if test="invoice != null">
			and e.invoice = #{invoice}
		</if>
		order by e.id desc
	</select>

	<insert id="insert" parameterType="map" useGeneratedKeys="true" keyProperty="id">
		insert into t_extension 
		<foreach collection="_this" index="key" open="(" close=")" separator=",">
			<if test="!key.startsWith('_')">
			${key}
			</if>
		</foreach>
		values
		<foreach collection="_this" index="key" item="value" open="(" close=")" separator=",">
			<if test="!key.startsWith('_')">
			if(length(#{value}) = 0, null, #{value})
			</if>
		</foreach>
	</insert>
	
	<update id="update" parameterType="map">
		update t_extension set
		<foreach collection="_this" index="key" item="value" open="" close="" separator=",">
		<if test="key != 'id' and !key.startsWith('_')">
			${key} = #{value}
		</if>
		</foreach>
		where id = #{id}
	</update>
	
	<delete id="delete" parameterType="map">
		delete from t_extension where 1
		<foreach collection="_this" index="key" item="value" open="" close="" separator="">
			<if test="!key.startsWith('_')">
				<if test="value == null">
			and ${key} is null
				</if>
				<if test="value != null">
			and ${key} = #{value}
				</if>
			</if>
		</foreach>
	</delete>
</mapper>